% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/order_df.R
\name{order_df}
\alias{order_df}
\title{Create an ordered factor in a data.frame and sort the data.frame by that column. This
function stills work but will be removed (defunct) in the next version of the package.
You can use forcats::fct_reorder for the same functionality.}
\usage{
order_df(
  df,
  target_col,
  value_col = NULL,
  fun = NULL,
  ...,
  desc = FALSE,
  factor_order = NULL
)
}
\arguments{
\item{df}{The data frame to sort.}

\item{target_col}{The column (character or factor) to convert to ordered factor.}

\item{value_col}{The column to use to sort \code{target_col}.}

\item{fun}{Function to use to summarize \code{value_col}.}

\item{...}{Other options passed on to \code{fun} (eg. \code{na.rm = TRUE}).}

\item{desc}{Should \code{target_col} be sorted according to \code{value_col} in a descending order (default \code{FALSE}).}

\item{factor_order}{A character vector of the unique values in \code{target_col} in the desired order.}
}
\value{
data frame
}
\description{
Can use the summary of another column (\code{target_col}), or specify the order manually (\code{factor_order}).
}
\examples{
set.seed(42)
df <- data.frame(Col1 = rep(letters[1:3], 3), 
                 Col2 = rnorm(9), 
                 Col3 = 1:9, 
                 stringsAsFactors = FALSE)

suppressWarnings(order_df(df, target_col = "Col1", value_col = "Col2", fun = mean))
suppressWarnings(order_df(df, target_col = "Col1", factor_order = c("b", "a", "c")))
}
