% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_devices.R
\name{png_retina}
\alias{png_retina}
\alias{save_png_retina}
\title{Create png for retina display}
\usage{
png_retina(filename = "Rplot\%03d.png", width = 480, height = 480,
  units = "px", pointsize = 12, bg = "white", res = NA, ...,
  type = c("cairo", "cairo-png", "Xlib", "quartz"), antialias)

save_png_retina(x, filename = "Rplot\%03d.png", width = 480,
  height = 480, units = "px", pointsize = 12, bg = "white",
  res = NA, ..., type = c("cairo", "cairo-png", "Xlib", "quartz"),
  antialias)
}
\arguments{
\item{filename}{the name of the output file.
    The page number is substituted if a C integer format is included in
    the character string, as in the default.  (The result must be less
    than \code{PATH_MAX} characters long, and may be truncated if not.
    See \code{\link{postscript}} for further details.)  Tilde expansion
    is performed where supported by the platform.}

\item{width}{the width of the device.}

\item{height}{the height of the device.}

\item{units}{The units in which \code{height} and \code{width} are
    given.  Can be \code{px} (pixels, the default), \code{in} (inches),
    \code{cm} or \code{mm}.}

\item{pointsize}{the default pointsize of plotted text, interpreted as
    big points (1/72 inch) at \code{res} ppi.}

\item{bg}{the initial background colour: can be overridden by setting
    par("bg").}

\item{res}{The nominal resolution in ppi which will be recorded in the
    bitmap file, if a positive integer.  Also used for \code{units}
    other than the default, and to convert points to pixels.}

\item{...}{for \code{type = "Xlib"} only, additional arguments to
    the underlying \code{\link{X11}} device such as \code{fonts} or
     \code{family}.

    For types \code{"cairo"} and \code{"quartz"}, the \code{family}
    argument can be supplied.  See the \sQuote{Cairo fonts}
    section in the help for \code{\link{X11}}.}

\item{type}{character string, one of \code{"Xlib"} or \code{"quartz"}
    (some macOS builds) or \code{"cairo"}.  The latter will only be
    available if the system was compiled with support for cairo --
    otherwise \code{"Xlib"} will be used.  The default is set by
    \code{\link{getOption}("bitmapType")} -- the \sQuote{out of the box}
    default is \code{"quartz"} or \code{"cairo"} where available,
    otherwise \code{"Xlib"}.}

\item{antialias}{for \code{type = "cairo"}, giving the type of
    anti-aliasing (if any) to be used for fonts and lines (but not
    fills). See \code{\link{X11}}.  The default is set by
    \code{\link{X11.options}}.  Also for \code{type = "quartz"}, where
    antialiasing is used unless \code{antialias = "none"}.}

\item{x}{a ggplot2 object}
}
\value{
A plot device is opened: nothing is returned to the R interpreter
}
\description{
`png_retina`` is a drop-in replacement for the \code{\link[grDevices]{png}} function 
for creating images for the web for retina devices. Internally, it simply 
doubles the width, height, and resolution specified. The intention is then
that in the webpage that you would specify the \code{width} and \code{height} 
attributes in the html at the original resolution.

`save_png_retina` is a wrapper function around `png_retina` analagous to 
[ggplot2::gsave()]
}
\section{Functions}{
\itemize{
\item \code{save_png_retina}: 
}}

\examples{

# You want to display at 500 * 500 in the web:
png_retina("myplot.svg", width = 500, height = 500)
plot(x = 1:500, y = rnorm(500))
dev.off()

# Although the output image will be 1000 * 1000, in the html you would put:
# <img src="myplot.png", width="500", height="500" />

if (suppressPackageStartupMessages(require("ggplot2", quietly = TRUE))) {
p <- ggplot(mtcars, aes(x = cyl, y = mpg)) + geom_point()
file <- tempfile(fileext = ".png")
save_png_retina(p, file)
}
}
\seealso{
\code{\link[grDevices]{png}}
}
